diff --git a/tensorflow/workspace.bzl b/tensorflow/workspace.bzl
index 48728ac131..9ce8250171 100644
--- a/tensorflow/workspace.bzl
+++ b/tensorflow/workspace.bzl
@@ -102,6 +102,7 @@ def tf_workspace(path_prefix="", tf_repo_name=""):
      sha256 = "5996380e3e8b981f55d1c8d58e709c00dbb4806ba367be75d0925a68cc2f6478",
      strip_prefix = "abseil-cpp-720c017e30339fd1786ce4aac68bc8559736e53f",
      build_file = clean_dep("//third_party:com_google_absl.BUILD"),
+     patch_file = clean_dep("//third_party:abseil_remove_glibc_check.patch")
   )
 
   tf_http_archive(
@@ -432,6 +433,7 @@ def tf_workspace(path_prefix="", tf_repo_name=""):
       ],
       sha256 = "0a05bd355e4571b01d813dddffa38e57e689ac41b264dc9b1bd6ec66463ef5d6",
       strip_prefix = "grpc-bd6bdf93279a39a8cd92978fd7c9d14eccd98fc2",
+      patch_file = clean_dep("//third_party/grpc:do_not_use_pthread_name.patch")
   )
 
 
@@ -489,6 +491,7 @@ def tf_workspace(path_prefix="", tf_repo_name=""):
       ],
       sha256 = "524ba98a56300149696481b4cb9ddebd0c7b7ac9b9f6edee81da2d2d7e5d2bb3",
       strip_prefix = "boringssl-a0fb951d2a26a8ee746b52f3ba81ab011a0af778",
+      patch_file = clean_dep("//third_party/boringssl:add_time_h.patch")
   )
 
   tf_http_archive(
diff --git a/third_party/abseil_remove_glibc_check.patch b/third_party/abseil_remove_glibc_check.patch
new file mode 100644
index 0000000000..f390ba3d1c
--- /dev/null
+++ b/third_party/abseil_remove_glibc_check.patch
@@ -0,0 +1,21 @@
+diff --git a/absl/base/policy_checks.h b/absl/base/policy_checks.h
+index 17c05c1..18bd7b0 100644
+--- a/absl/base/policy_checks.h
++++ b/absl/base/policy_checks.h
+@@ -82,16 +82,6 @@
+ // Standard Library Check
+ // -----------------------------------------------------------------------------
+ 
+-// We have chosen glibc 2.12 as the minimum as it was tagged for release
+-// in May, 2010 and includes some functionality used in Google software
+-// (for instance pthread_setname_np):
+-// https://sourceware.org/ml/libc-alpha/2010-05/msg00000.html
+-#ifdef __GLIBC_PREREQ
+-#if !__GLIBC_PREREQ(2, 12)
+-#error "Minimum required version of glibc is 2.12."
+-#endif
+-#endif
+-
+ #if defined(_STLPORT_VERSION)
+ #error "STLPort is not supported."
+ #endif
diff --git a/third_party/boringssl/add_time_h.patch b/third_party/boringssl/add_time_h.patch
new file mode 100644
index 0000000000..bcadfd4e62
--- /dev/null
+++ b/third_party/boringssl/add_time_h.patch
@@ -0,0 +1,12 @@
+diff --git a/src/crypto/bio/socket_helper.c b/src/crypto/bio/socket_helper.c
+index 268405a6..7dbb5d32 100644
+--- a/src/crypto/bio/socket_helper.c
++++ b/src/crypto/bio/socket_helper.c
+@@ -18,6 +18,7 @@
+ #include <openssl/bio.h>
+ #include <openssl/err.h>
+ 
++#include <time.h>
+ #include <fcntl.h>
+ #include <string.h>
+ #include <sys/types.h>
diff --git a/third_party/grpc/do_not_use_pthread_name.patch b/third_party/grpc/do_not_use_pthread_name.patch
new file mode 100644
index 0000000000..c7ede6b6db
--- /dev/null
+++ b/third_party/grpc/do_not_use_pthread_name.patch
@@ -0,0 +1,27 @@
+diff --git a/src/core/lib/gprpp/thd_posix.cc b/src/core/lib/gprpp/thd_posix.cc
+index 2f6c2edcae..30dbf82ab4 100644
+--- a/src/core/lib/gprpp/thd_posix.cc
++++ b/src/core/lib/gprpp/thd_posix.cc
+@@ -36,6 +36,11 @@
+ #include "src/core/lib/gpr/useful.h"
+ #include "src/core/lib/gprpp/memory.h"
+ 
++// addition for glib 2.11 support which lacks pthread_setname_np
++#ifdef __linux__
++#include <sys/prctl.h>
++#endif
++
+ namespace grpc_core {
+ namespace {
+ gpr_mu g_mu;
+@@ -91,7 +96,9 @@ class ThreadInternalsPosix
+                             size_t buf_len = GPR_ARRAY_SIZE(buf) - 1;
+                             strncpy(buf, arg.name, buf_len);
+                             buf[buf_len] = '\0';
+-                            pthread_setname_np(pthread_self(), buf);
++                            // use prctl which is available in glibc 2.11, pthread_setname_np is not
++                            prctl (PR_SET_NAME, buf, 0, 0, 0, 0);
++                            //pthread_setname_np(pthread_self(), buf);
+ #endif  // GPR_APPLE_PTHREAD_NAME
+                           }
+ 
